/*******************************************************************************
* 
* Instrument: BEER_MCPL_PWD
* 
* %Identification
* Written by: Jan Saroun, saroun@ujf.cas.cz
* Date: Jan 2019
* Origin: NPI Rez
* Version: 1.1, 3/1/2019
* 
* Demonstrator of combined SIMRES/McStas simulations - McStas section with a sample model (PowerN).
* Tested with McStas v. 2.5, SIMRES v. 6.3.6
*
* %Description 
*
* The instrument represents a simple sample model surrounded by MCPL input and output. It is intended 
* for use as a sample section of an instrument defined in SIMRES ray-tracing program, eployig the 
* feature allowig for combined tracing with SIMRES and McStas. 
* The parameters "input", "export" and "repetition" are obligatory (expeted by SIMRES). 
* the parameter "export" can be omitted if no secondary beam tracing by SIMRES is expected.
* Derived instruments can define other parameters, as well as other components before and/or after the sample.
*
* %Example: 
*
* %Parameters
*
* input: [str]      Input MCPL file	
* export: [str]     Output MCPL file	
* repetition: [ ]   Number of loops through the MCPL file	
*
* Instrument configuration (required by dhkl detector)
* Lc: [m]           distance moderator - pulse definition chopper (=0 for short pulse source) 
* Lsample: [m]		distance moderator - sample
* Linp: [m]         distance MCPL_input - sample
* Ldet: [m]		    distance sample - detector
* tth: [deg]		detector take-off angle (2 theta)
* dtth: [deg]       detector angular range (2 theta)
* dphi: [deg]       detector vertical span
* lam0: [AA]        nominal wavelength (centre of the wavelength frame) 
* dlam: [AA]        wavelength band width
*
* %End
*******************************************************************************/
DEFINE INSTRUMENT BEER_MCPL_PWD(string input="simres.mcpl", string export="mcstas.mcpl", int repetition=1,
Lc=6.65, Lsample=158, Linp=0.03, Ldet=2, 
tth=90, dtth=30, dphi=30, lam0=2.0, dlam=1.8,
string sample="duplex.laz")

DECLARE
%{
double tof_t0, d_min, d_max;
%}
INITIALIZE
%{
double hm = 2*PI*K2V; // h/m_n	
// chopper delay - input to NPI_tof_dhkl_detector
tof_t0=Lc/(hm/lam0);
// dhkl range - NPI_tof_dhkl_detector
d_min = 0.5*(lam0-0.5*dlam)/sin(0.5*(tth+0.5*dtth)*DEG2RAD);
if (tth-0.5*dtth>5) {
	d_max = 0.5*(lam0+0.5*dlam)/sin(0.5*fabs(tth-0.5*dtth)*DEG2RAD);
} else {
	d_max = 10;
}
// report 
printf("t0 delay = %g [ms]\n", tof_t0*1000);
printf("dmin = %g, dmax = %g\n", d_min, d_max);
printf("Using the MCPL input: %s\n", input);
printf("Export to MCPL: %s\n", export);
%}

TRACE
 
COMPONENT Origin = Progress_bar()
  AT (0, 0, 0) ABSOLUTE
  
/* Read neutrons from an mcpl file. 
Due to a bug in MCPL_input, keep dir_smear > 0*/
COMPONENT src = MCPL_input(filename=input, polarisationuse=0, verbose=1, repeat_count=repetition, E_smear=0, pos_smear=0.0001, dir_smear=0.001)
AT( 0,0,0) RELATIVE PREVIOUS

/* Place the sample axis to the correct distance after the MCPL_input.
It depends on the configuration of the primary beam in SIMRES (distance of the sample from the last SIMRES monitor).
Here we assume 40 mm.*/  
COMPONENT Sample_axis = Arm() 
AT (0, 0, Linp) RELATIVE src
ROTATED (0, 0, 0) RELATIVE src

COMPONENT Mon1 = Monitor(xmin=-0.05, xmax=0.05, ymin=-0.05, ymax=0.05, restore_neutron=1)
AT (0, 0, 0.1) RELATIVE Sample_axis


/* Detector arm - defines nominal scattering angle (at detector centre). */ 
COMPONENT Detector_arm = Arm() 
AT (0, 0, 0) RELATIVE Sample_axis
ROTATED (0, tth, 0) RELATIVE Sample_axis

/*
SAMPLE.
Other components can be also defined before or after the sample.
*/
COMPONENT sample = PowderN(
    format=Lazy,  
    reflections=sample, 
    yheight=0.05,
    radius=0.005, 
	d_omega=dtth,
    d_phi=dphi, 
	tth_sign=1,
	p_transmit=0.0, 
	p_inc=0.1,
	Strain=0.0,
	delta_d_d=0.0,
	focus_flip=0, 
	target_index=1) 
AT (0, 0, 0) RELATIVE Sample_axis
ROTATED (0, 45, 90) RELATIVE Sample_axis

/* Sample focuses at this component. */
COMPONENT target = Arm()
  AT (0, 0, Ldet) RELATIVE Detector_arm
  EXTEND  
%{ 
  ALLOW_BACKPROP; // allow backtracing, otherwise Mon2 absorbs neutrons ...
%}

COMPONENT Mon2 = Monitor(xmin=-0.06, xmax=0.06, ymin=-0.06, ymax=0.06, restore_neutron=1)
AT (0, 0, 0.2) RELATIVE Detector_arm

/*
MCPL output - this will be the start of secondary tracing section in SIMRES.
Put it on the secondary beam axis ...
*/
COMPONENT vout = MCPL_output(filename=export, polarisationuse=0, doubleprec=1, verbose=1)
AT(0, 0, 0) RELATIVE Detector_arm

/*
Optional McStas monitors or other components can follow ... 
*/

COMPONENT rad2 = Exact_radial_coll(
    theta_min=-15.597,
    theta_max=15.597,
    nslit=160, 
    radius=0.160, 
    length=0.35, 
    h_in=0.1246, 
    h_out=0.3533,  
	d=0.0001,
    verbose=1)
AT (0, 0, 0) RELATIVE Detector_arm

/* dhkl diffractogram */ 
COMPONENT dhklmon = NPI_tof_dhkl_detector(  
	nd=3000, 
	filename="dhkl.dat",  
	yheight=1.0, 
	zdepth=0.02, 
	radius=Ldet, 
	amin=tth-0.5*dtth,  
	amax=tth+0.5*dtth, 
	d_min=d_min,  
	d_max=d_max, 
	time0=tof_t0,
	Linst=Lsample+Ldet, 
	Lc = Lc,
	res_x=0.002,    
	res_y=0.005, 
	res_t=1e-6,    
	mu=1.0,  
	modulation=0,    
	mod_dt=0,    
	mod_twidth=0 ,    
	mod_shift=0,
	mod_d0_table="",  
	restore_neutron=1)  
  AT (0, 0, 0) RELATIVE Sample_axis   


END  
  
 
 


     
