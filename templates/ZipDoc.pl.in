#! /usr/bin/perl
##################################################################
#  $Id: ZipDoc.pl.in,v 1.2 2018/11/01 18:40:03 saroun Exp $
#  *****  Script for packing SIMRES docs *****
#  Usage: perl ZipDoc.pl
##################################################################
BEGIN {
	push @INC, '.';
}
use Restrax;
use strict;
use Cwd;
use vars qw/*dbg *PROMPT/;
*dbg      = *Restrax::dbg;
*PROMPT   = *Restrax::PROMPT;

# -------------------  PROJECT DEFINITIONS (edit to your convenience)------------

# source files/directories
# script DOES descent directories, so you can define the whole tree
my @SOURCES=("doc");

#-----------------------------------------------------------------------------

# Global declarations
$dbg=0;          # set 1 for debug: no system commands will be executed
$PROMPT="yes";   # set to no if you dont want any user confirmation on file delete
my $PGMNAME="@PGMNAME@"; # program executable name
my $VERSION="@VERSION@"; # version string
# Get system info for archive filename

# temporary subdirectory for the archive
my $TD="$PGMNAME-$VERSION-doc";

# ------------------------------------ PROCEDURES ------------------------------------------
# handle command line parameters
sub CmdParam {
  if ($#ARGV > -1) {
    foreach my $a (@ARGV) {
      if ($a =~ m/[-]*Q\z/) {$PROMPT="no";};
      if ($a =~ m/[-]*help\z/) {
        print "\n";
        print "Usage:\n";
        print "perl $0 [options]\n";
        print "Options:\n";
        print "  -Q       ... quiet mode: does not prompt for anything \n";
        print "  -help    ... this help \n";
        print "\n";
        exit;
      };
    };
  };
};

# ------------------------------ MAIN SECTION ----------------------------------

# process command parameters
CmdParam;

# clean/recreate temporary target directory, $TD
if ($dbg == 0) {
  if ( -d "$TD" ) { RmDirCmd("$TD")};
  mkdir("$TD");
};

# collect all resources defined in $SOURCES list
my $exclist="php|pl|doc"; #excluded extensions
my @SRCFILES = CollectResources("",$exclist,@SOURCES);

# copy sources to $TD
foreach my $F (@SRCFILES) {
  if ( -f $F ) {
    FileCopyCmd($F,$TD,"0644");
  };
};

# pack the directory
my $ARCH=ZipDirCmd($TD);

# remove the temporary directory
RmDirCmd($TD);

if ( $ARCH ne "" ) {
  printf("Archive $ARCH has been created.\n");
} else {
  printf("WARNING! Archive could not be created.\n");
};



